Coisas para visualizar sobre os dados:

- Ver se o transaction ID de cada cliente funciona para apenas um mesmo dia (o que provavelmente é o que acontece, então ele acumula todas os pedidos por aquele conjunto de produtos durante o dia).

- Tenho que associar os dias da semana às datas (pode ser importante porque um produto pode ser mais comprado aos Domingos do que às Terças, por exemplo).

- Checar se o período de avaliaçaõ é apenas o do mês de Julho e, caso não for, checar em quais meses da simulação as promoções entram em vigor (ver se todos os meses fazem parte ou não).

- Verificar se, na tabela orders, o "salesPrice" de cada produto muda com o tempo.

- Verificar se o "salesPrice" se refere a apenas uma unidade do produto ou ao batch de produtos vendidos em uma linha de transação (muito provavelmente a primeira, porém é melhor testar).

- Entender o que a promoção faz, de fato, com um produto.



Estrutura:

- Um item possui apenas UMA única marca, vem de apenas um único manufaturador, tem uma avaliação geral dos usuários (de 1 estrela a 5, sendo este numero quebrado), possui categorias (pesquisar mais sobre), o preço recomendado pela manufaturador, o preço que deve ser levado em conta durante a simulação (ou seja, ele não muda durante o período) e os dias em que ele entrou em promoção.

- Uma mesma transação (identificada unicamente pelo transactID) se constitui de diversas linhas de transação (que é o que aparece efetivamente na tabela) que são feitas durante um mesmo dia e envolvendo um mesmo cliente (checar isso).

- Cada linha de transação é composta de apenas UM produto e uma quantidade x, além de possuir o preço em que foi vendido aquele produto.

- Um mesmo item participa de n linhas de transação, em quantidades arbitrarias (atributo 'order').

- As linhas de transação podem ou não ser criadas no mesmo tempo (data e horário). Partindo disso, a única forma de identificar uma linha de transação é através da tupla (time, transactID, itemID).

- A order, no contexto desse problema, seria relativa a apenas um produto.

- Na dá para identificar os clientes, então não podemos fazer uma approach "client-based".

- "It is important to point out that some
products will be promoted for limited periods of time. Products that are promoted during the
simulation period will be earmarked. However, the transaction data needs to indicate
whether a product is being promoted during the training period."


Ideias jogadas:

- Podemos adicionar algum noise ao customer rating de um produto, para simular a sua mudança durante o tempo na vida real.

- Vamos usar o dado "recommendedPrice" pra alguma coisa? Faz sentido considerá-lo? Claro, podemos usá-lo para ajustar relativamente o preço de um produto durante a simulação (seria nossa "base"), mas será que não poderíamos só pegar os dados sobre os últimos preços colocados nesse mesmo produto e, de acordo com o "contexto", prever o melhor preço para o produto hoje? (i.e. o sweet spot do preço, tal que os consumidores ainda vão comprar e o vendedor vai ter o máximo de lucro).

- Podemos instanciar alguns clientes para simular como seriam as vendas em um dia.




- O preço recomendado muda?

- Distribuição dos horários das orders
